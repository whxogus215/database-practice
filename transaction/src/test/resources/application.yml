spring:
  datasource:
    url: jdbc:mysql://localhost:3306/test_db
    username: root
    password: 1234
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    database-platform: org.hibernate.dialect.MySQL8Dialect
    hibernate:
      # create: 애플리케이션 시작 시점에 기존 테이블을 삭제하고 새로 생성합니다. (테스트용으로 가장 적합)
      # create-drop: create와 동일하지만, 애플리케이션 종료 시점에 테이블을 삭제합니다.
      # update: 변경된 스키마만 반영합니다.
      # validate: 엔티티와 테이블이 정상 매핑되었는지 확인만 합니다.
      # none: 아무 작업도 하지 않습니다. (운영 환경에서 권장)
      ddl-auto: create
    properties:
      hibernate:
        # 실행되는 SQL 쿼리를 보기 좋게 포맷팅하여 로그로 출력합니다.
        format_sql: true
        # SQL 쿼리의 파라미터 값을 로그에 표시합니다. (디버깅 시 유용)
        show_sql: true

# ===============================
# = 로깅 설정 (선택 사항)
# ===============================
#logging:
#  level:
#    # Hibernate가 생성하는 SQL 로그를 DEBUG 레벨로 설정하여 상세히 확인합니다.
#    org.hibernate.SQL: debug
#    # SQL 바인딩 파라미터를 TRACE 레벨로 설정하여 ?에 어떤 값이 들어가는지 확인합니다.
#    org.hibernate.type.descriptor.sql: trace
